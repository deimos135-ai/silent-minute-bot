import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.enums.parse_mode import ParseMode
from aiogram.filters import Command
from app.scheduler import setup_scheduler, get_random_message

# ‚è¨ –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ Fly.io —Å–µ–∫—Ä–µ—Ç—ñ–≤
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID_RAW = os.getenv("CHAT_ID_NEW")

if not BOT_TOKEN or not CHAT_ID_RAW:
    raise RuntimeError("‚ùå BOT_TOKEN –∞–±–æ CHAT_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É —Å–µ–∫—Ä–µ—Ç–∞—Ö Fly.io!")

try:
    CHAT_ID = int(CHAT_ID_RAW)
except ValueError:
    raise RuntimeError(f"‚ùå CHAT_ID –º–∞—î –±—É—Ç–∏ —Ü—ñ–ª–∏–º —á–∏—Å–ª–æ–º, –∑–∞—Ä–∞–∑: {CHAT_ID_RAW}")

print(f"‚úÖ BOT –∑–∞–ø—É—â–µ–Ω–æ –∑ CHAT_ID: {CHAT_ID}")

# üîß –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# üîÅ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–æ—Ç–∞
@dp.message(Command("ping"))
async def ping_command(message: types.Message):
    test_message = get_random_message()
    await message.answer(f"‚úÖ –ë–æ—Ç –ø—Ä–∞—Ü—é—î!\n\n{test_message}")

# üß† –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
async def main():
    await setup_scheduler(bot, CHAT_ID)
    print("‚è≥ –û—á—ñ–∫—É—î–º–æ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö –ø–æ–¥—ñ–π...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
